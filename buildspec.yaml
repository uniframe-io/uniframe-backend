version: 0.2
env:
  variables:
    ACCOUNT_ID: 671626527153
    REGION: eu-west-1
phases:
  install:
    runtime-versions:
      python: 3.8
      nodejs: latest
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"      
      - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64-2.1.23.zip" -o "awscliv2.zip"
      - unzip awscliv2.zip
      - yum update -y && yum install -y sudo
      - sudo ./aws/install
      # - pip install --upgrade awscli
      - pip install --upgrade pip 
      - pip install -r requirements.txt   
      - aws ecr get-login-password --region ${REGION} | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com
      - docker pull ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/postgres:latest
      - pip install -e .
  build:
    commands:
      - echo Run old testing
      - isort --check scripts server api_tests
      - black -l 80 --check scripts server api_tests
      - flake8 --config setup.cfg scripts server api_tests
      - mypy scripts server api_tests
      - echo Run PG docker
      - docker image ls
      - docker run -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=nm -d -p 5432:5432 ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/postgres:latest
      - sleep 20
      - DOCKER_ID=$(docker container  ls | grep "postgres" | awk "{print \$1}")
      - docker cp ./scripts/database/postgres/init.sql ${DOCKER_ID}:/init.sql
      - docker cp ./scripts/database/postgres/init_table.sql ${DOCKER_ID}:/init_table.sql
      - echo Change hostname to db
      - echo "db" > /etc/hostname
      - hostname -F /etc/hostname 
      - hostname
      - echo Run new testing
      - API_RUN_LOCATION=test DEPLOY_ENV=local PRODUCT_PREFIX=uniframe DOMAIN_NAME=localhost OAUTH2_GITHUB_CLIENT_ID=dummy OAUTH2_GITHUB_CLIENT_SECRET=dummy pytest ./api_tests


  post_build:
    commands:
      - echo Build completed on `date`
reports:
  myReport:
    files:
      - "**/*"
cache:
  paths:
    - "/root/.cache/pip/*"